# .Name of the workflow (visible in GitHub Actions tab.)
name: Backend CI

# # Trigger conditions
on:
  push:
    branches:
      - main
    pull_request:
      branches:
        - main
    paths:
      - 'app/backend/**'                     # .Only trigger when backend code changes
      - '.github/workflows/backend.yml'  # Also trigger if this workflow file itself changes
  workflow_dispatch:                    # To trigger the workflow manually
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/backend:latest

jobs:
  # ✅ Step 1: Build & Test Job (runs on PR and on merge)
  build-and-test:
    runs-on: ubuntu-latest
    name: Build & Test
    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v3

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 Install Dependencies
        run: npm install
        working-directory: app/backend

      - name: 🧪 Run Linter
        run: npm run lint
        working-directory: app/backend

      - name: 🧪 Run Unit Tests
        run: npm test
        working-directory: app/backend

  # ✅ Step 2: Docker Build & Push (only runs after PR merged to main)
  docker-deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-test
    runs-on: ubuntu-latest
    name: Docker Build & Push
    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v3

      - name: 🔐 Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🐳 Build Docker Image
        run: docker build -t $DOCKER_IMAGE .
        working-directory: app/backend

      - name: 🚀 Push Docker Image
        run: docker push $DOCKER_IMAGE
