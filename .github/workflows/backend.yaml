# üìõ Workflow name shown in Actions tab
name: Backend CI

# üöÄ Trigger workflow on push to main or manual run
on:
  push:
    branches:
      - main
    paths:
      - 'app/backend/**'
      - '.github/workflows/backend.yml'
  workflow_dispatch:

env:
  DUMMY: "trigger"   # Optional global env var

jobs:

  #########################################################
  # üß± JOB 1: BUILD - Compiles and uploads artifact
  #########################################################
  build:
    runs-on: ubuntu-latest
    name: Build Backend App

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci
        working-directory: app/backend

      - name: Build app
        run: npm run build
        working-directory: app/backend

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist                     # üîÅ This name will be reused
          path: app/backend/dist                 # üóÇÔ∏è Folder to share with other jobs


  #########################################################
  # ‚úÖ JOB 2: TEST - Runs unit tests using built app
  #########################################################
  test:
    runs-on: ubuntu-latest
    name: Run Unit Tests
    needs: build                                 # ‚è≥ Run after build job

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-dist
          path: app/backend/dist

      - name: Install dependencies
        run: npm ci
        working-directory: app/backend

      - name: Run Unit Tests
        run: npm test
        working-directory: app/backend


  #########################################################
  # üîç JOB 3: SONAR - Analyzes code quality
  #########################################################
  sonar:
    runs-on: ubuntu-latest
    name: SonarQube Scan
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-dist
          path: app/backend/dist

      - name: Install dependencies
        run: npm ci
        working-directory: app/backend

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -g sonar-scanner
          sonar-scanner \
            -Dsonar.projectKey=my-backend-app \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN
        working-directory: app/backend


  #########################################################
  # üê≥ JOB 4: DOCKER - Builds and pushes image using dist
  #########################################################
  docker:
    runs-on: ubuntu-latest
    name: Build & Push Docker Image
    needs: sonar

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-dist
          path: app/backend/dist

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest .
        working-directory: app/backend

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest
